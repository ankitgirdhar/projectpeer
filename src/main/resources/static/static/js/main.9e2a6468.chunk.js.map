{"version":3,"sources":["securityUtils/setJWTToken.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","actions/types.js","store.js","actions/securityActions.js","hooks/HeaderHookNotAuthenticated.js","hooks/HeaderHookAuthenticated.js","components/layout/Header.js","hooks/LandingHook.js","components/layout/Landing.js","hooks/SignUpHook.js","UserManagement/Register.js","hooks/LoginHook.js","UserManagement/Login.js","securityUtils/secureRoute.js","actions/projectAction.js","hooks/DashBoardHook.js","components/DashBoard.js","hooks/AddProjectHook.js","components/project/AddProject.js","hooks/UpdateProjectHook.js","components/project/UpdateProject.js","hooks/ProjectTaskHook.js","components/projectBoard/projectTasks/ProjectTask.js","actions/backlogActions.js","hooks/ProjectBoardHook.js","components/projectBoard/Backlog.js","components/projectBoard/ProjectBoard.js","hooks/AddProjectTaskHook.js","components/projectBoard/projectTasks/AddProjectTask.js","hooks/UpdateProjectTaskHook.js","components/projectBoard/projectTasks/UpdateProjectTask.js","App.js","serviceWorker.js","index.js"],"names":["setJWTToken","token","axios","defaults","headers","common","initialState","initalState","projects","project","project_tasks","project_task","user","validToken","booleanActionPayload","payload","combineReducers","errors","state","action","type","filter","projectIdentifier","backlog","projectSequence","security","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","logout","dispatch","localStorage","removeItem","useStyles","makeStyles","theme","ul","margin","padding","listStyle","toolbar","flexWrap","toolbarTitle","flexGrow","color","textDecoration","link","spacing","icon","marginRight","marginLeft","HeaderHook","props","classes","Fragment","CssBaseline","AppBar","position","elevation","className","appBar","Toolbar","fontSize","Typography","component","Link","to","variant","noWrap","Button","dashlink","style","onClick","Header","bind","this","location","href","HeaderHookAuthenticated","fullname","HeaderHookNotAuthenticated","Component","connect","layout","width","height","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","root","minWidth","paddingRight","bullet","display","transform","title","LandingHook","Grid","container","justify","alignItems","item","xs","md","lg","Card","CardContent","gutterBottom","align","paragraph","CardActions","Landing","history","push","paper","marginTop","flexDirection","avatar","secondary","main","form","submit","signup","SignUpHook","Container","maxWidth","Avatar","noValidate","onSubmit","TextField","name","required","fullWidth","id","label","autoFocus","value","onChange","username","password","confirmPassword","Register","nextProps","setState","e","preventDefault","newUser","createNewUser","target","a","post","response","data","primary","LoginHook","Login","LoginRequest","login","res","setItem","decoded","jwt_decode","otherProps","Route","render","Redirect","createProject","content","justifyContent","tag","newpaper","overflow","maxHeight","minHeight","marginBottom","div","scroll","pdes","button","tempLink","DashboardHook","sm","Divider","map","elem","projectName","description","ButtonGroup","orientation","aria-label","onDeleteClick","DashBoard","deleteProject","getProjects","get","delete","AddProjectHook","multiline","rowsMax","defaultValue","InputLabelProps","shrink","start_date","end_date","AddProject","newProject","UpdateProjectHook","disabled","UpdateProject","match","params","getProject","updateProject","high","medium","low","ProjectTaskHook","cardClass","cardString","priority","acceptanceCriteria","ProjectTask","backlog_id","pt_id","deleteProjectTask","divider","textAlign","card","fab","top","right","bottom","left","fabtext","ProjectBoardHook","Fab","todoItems","inProgressItems","doneItems","Backlog","tasks","key","i","length","status","ProjectBoard","getBacklog","BoardContent","boardAlgorithm","AddProjectTaskHook","summary","dueDate","select","SelectProps","native","helperText","AddProjectTask","newTask","addProjectTask","UpdateProjectTaskHook","UpdateProjectTask","created_At","getProjectTask","updateProjectTask","patch","jwtToken","currentTime","Date","now","exp","App","createMuiTheme","cyan","ThemeProvider","Paper","BrowserRouter","exact","path","Switch","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9e2a6468.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setJWTToken = token => {\n    if(token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"]\n    }\n};\nexport default setJWTToken;","import {GET_ERRORS} from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {DELETE_PROJECT, GET_PROJECT, GET_PROJECTS} from \"../actions/types\";\n\n\nconst initalState = {\n  projects: [],\n  project: {}\n};\n\nexport default function (state = initalState, action) {\n    switch(action.type) {\n        case GET_PROJECTS:\n            return {\n               ...state,\n               projects: action.payload\n            };\n        case GET_PROJECT:\n            return {\n               ...state,\n               project: action.payload\n            };\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\n            }\n        default:\n            return state;\n    }\n}","import {DELETE_PROJECT_TASK, GET_BACKLOG, GET_PROJECT_TASK} from \"../actions/types\";\n\nconst initialState = {\n    project_tasks: [],\n    project_task: {}\n}\n\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks: action.payload\n            }\n\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            }\n\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\n            }\n        default:\n            return state;\n    }\n}","import {SET_CURRENT_USER} from \"../actions/types\";\n\nconst initialState = {\n    user: {},\n    validToken: false\n}\n\nconst booleanActionPayload = (payload) => {\n    if(payload)\n        return true;\n    return false;\n}\n\nexport default function (state=initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                validToken : booleanActionPayload(action.payload),\n                user: action.payload\n            }\n        default:\n            return state\n    }\n\n}","import {combineReducers} from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\n\nexport default combineReducers ({\n    errors: errorReducer,\n    project: projectReducer,\n    backlog: backlogReducer,\n    security: securityReducer\n});","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USERS\";","import thunk from \"redux-thunk\";\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport rootReducer from \"./reducers\";\n\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\nif(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n    store = createStore(\n        rootReducer,\n        initialState,\n        compose(\n            applyMiddleware(...middleware),\n            ReactReduxDevTools\n        )\n    );\n} else {\n    store = createStore(\n        rootReducer,\n        initialState,\n        compose(applyMiddleware(...middleware))\n    );\n}\n\nexport default store;","import axios from \"axios\";\nimport {GET_ERRORS, SET_CURRENT_USER} from \"./types\";\nimport setJWTToken from \"./../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/users/register\" , newUser);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch(err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    }\n}\n\nexport const login = LoginRequest => async dispatch => {\n    try {\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\n        const {token} = res.data;\n\n        localStorage.setItem(\"jwtToken\", token);\n\n        setJWTToken(token);\n\n        const decoded = jwt_decode(token);\n\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload: decoded\n        });\n\n    } catch(err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    }\n};\n\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setJWTToken(false);\n\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n    });\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from \"react-router-dom/Link\";\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    '@global': {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    },\n    toolbar: {\n        flexWrap: 'wrap',\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n        '&:hover': {\n            color: '#FFFFFF',\n            textDecoration: 'none',\n        },\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n        '&:hover': {\n            color: '#FFFFFF',\n            textDecoration: 'none',\n        },\n    },\n    icon: {\n        marginRight: theme.spacing(5),\n        marginLeft: theme.spacing(5),\n    }\n}));\n\n\n\n\nfunction HeaderHook(props) {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n                <Toolbar className={classes.toolbar} >\n                    <AccountTreeIcon className={classes.icon} fontSize=\"large\" color=\"primary\"/>\n                    <Typography component={Link} to={'/'}  variant=\"h4\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                        Jira\n                    </Typography>\n                    <Button component={Link} to={'/register'}  color=\"primary\" variant=\"contained\" className={classes.link}>\n                        Sign Up\n                    </Button>\n                    <Button component={Link} to={'/login'}  color=\"primary\" variant=\"outlined\" className={classes.link}>\n                        Login\n                    </Button>\n\n                </Toolbar>\n            </AppBar>\n            {/* Hero unit */}\n        </React.Fragment>\n    );\n}\n\nexport default HeaderHook;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from \"react-router-dom/Link\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    '@global': {\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    },\n    toolbar: {\n        flexWrap: 'wrap',\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n        '&:hover': {\n            color: '#FFFFFF',\n            textDecoration: 'none',\n        },\n    },\n    link: {\n        margin: theme.spacing(1, 2),\n        '&:hover': {\n            color: '#FFFFFF',\n            textDecoration: 'none',\n        },\n    },\n    icon: {\n        marginRight: theme.spacing(5),\n        marginLeft: theme.spacing(5),\n    },\n    dashlink: {\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(2),\n        '&:hover': {\n            color: '#FFFFFF',\n            textDecoration: 'none',\n        },\n    }\n}));\n\n\n\n\nfunction HeaderHook(props) {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n                <Toolbar className={classes.toolbar} >\n                    <AccountTreeIcon className={classes.icon} fontSize=\"large\" color=\"primary\"/>\n                    <Typography component={Link} to={'/'} variant=\"h4\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                        Jira\n                    </Typography>\n                    <AccountCircleIcon fontSize=\"large\" color=\"primary\" style={{marginRight:'0.5em'}}/>\n                    <Typography variant=\"h6\">\n                        {props.user}\n                    </Typography>\n                    <Button component={Link} to={'/dashboard'} color=\"primary\" variant=\"contained\" className={classes.dashlink}>\n                        My Dashboard\n                    </Button>\n                    <Button component={Link} to={'/logout'} color=\"primary\" variant=\"outlined\" className={classes.link} onClick={props.logout}>\n                        Logout\n                    </Button>\n\n                </Toolbar>\n            </AppBar>\n            {/* Hero unit */}\n        </React.Fragment>\n    );\n}\n\nexport default HeaderHook;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../actions/securityActions\";\nimport HeaderHookNotAuthenticated from \"../../hooks/HeaderHookNotAuthenticated\";\nimport HeaderHookAuthenticated from \"../../hooks/HeaderHookAuthenticated\";\n\nclass Header extends Component {\n    constructor() {\n        super();\n        this.logout = this.logout.bind(this);\n    }\n    logout() {\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n\n    render() {\n        const {validToken , user } = this.props.security;\n        if(validToken && user) {\n            return (\n                <HeaderHookAuthenticated user={user.fullname} logout={this.logout}/>\n                );\n        } else {\n            return (\n                <HeaderHookNotAuthenticated />\n            );\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    security: state.security\n})\n\nexport default connect(mapStateToProps, {logout})(Header);","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    layout: {\n        width: 'auto',\n        height: '100vh',\n        backgroundImage: 'url(https://source.unsplash.com/5fNmWej4tAA)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    root: {\n        minWidth: 275,\n        padding: \"2rem\",\n        paddingRight: \"5rem\",\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: \"4.5em\",\n\n    },\n    link: {\n        margin: theme.spacing(2),\n        fontSize: \"1.2em\",\n        '&:hover': {\n            color: '#FFFFFF',\n            textDecoration: 'none',\n        },\n    },\n\n\n}));\nfunction LandingHook(props) {\n    const classes = useStyles();\n    return (\n        <>\n            <Grid container justify=\"center\" alignItems=\"center\" className={classes.layout}>\n                <Grid item xs={0} md={2} lg={3}>\n                </Grid>\n                <Grid item xs={12} md={8} lg={6}>\n                    <Card className={classes.root}>\n                        <CardContent>\n                            <Typography variant=\"h5\" className={classes.title} >\n                                Manage projects\n                            </Typography>\n                            <Typography variant=\"h5\" className={classes.title} color=\"primary\" gutterBottom>\n                                the right way.\n                            </Typography>\n\n                            <Typography variant=\"h5\" align=\"left\" color=\"textSecondary\" paragraph gutterBottom>\n                                The project management tool that keep the teams going.\n                                Create your account to join active projects\n                                or start your own.\n                            </Typography>\n\n                        </CardContent>\n                        <CardActions>\n                            <Button component={Link} to={'/register'} color=\"primary\" align=\"left\" variant=\"contained\" className={classes.link}>\n                                Sign Up\n                            </Button>\n                            <Button component={Link} to={'/login'} color=\"primary\" variant=\"outlined\" className={classes.link}>\n                                Login\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n                <Grid item xs={0} md={2} lg={3}>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default LandingHook;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport LandingHook from \"../../hooks/LandingHook\";\n\nclass Landing extends Component {\n\n    componentDidMount() {\n        if(this.props.security.validToken)\n            this.props.history.push(\"/dashboard\");\n    }\n\n    render() {\n        return (\n            <LandingHook />\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    security: state.security\n})\n\nexport default connect(mapStateToProps)(Landing);","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport LockTwoToneIcon from '@material-ui/icons/LockTwoTone';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(10),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(2),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    signup: {\n        fontSize: theme.spacing(5.4)\n    },\n}));\n\nfunction SignUpHook(props) {\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper} >\n                <Avatar className={classes.avatar}>\n                    <LockTwoToneIcon />\n                </Avatar>\n                <Typography variant=\"h5\" className={classes.signup}>\n                    Sign up\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={props.onSubmit}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <TextField\n                                name=\"fullname\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"fullname\"\n                                label=\"Full Name\"\n                                autoFocus\n                                value={props.fullname}\n                                onChange={props.onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"username\"\n                                value={props.username}\n                                onChange={props.onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                value={props.password}\n                                onChange={props.onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"confirmPassword\"\n                                label=\"Confirm Password\"\n                                type=\"password\"\n                                id=\"confirmPassword\"\n                                value={props.confirmPassword}\n                                onChange={props.onChange}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"center\">\n                        <Grid item>\n                            <Link component={Link} to={'/login'} variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default SignUpHook;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {createNewUser} from \"../actions/securityActions\";\nimport SignUpHook from \"../hooks/SignUpHook\";\n\nclass Register extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            \"username\": \"\",\n            \"fullname\": \"\",\n            \"password\": \"\",\n            \"confirmPassword\": \"\",\n            \"errors\": {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors) {\n            this.setState({errors: nextProps.errors})\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            \"username\": this.state.username,\n            \"fullname\": this.state.fullname,\n            \"password\": this.state.password,\n            \"confirmPassword\": this.state.confirmPassword\n        }\n\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name] : e.target.value})\n    }\n\n    render() {\n        return (\n            <SignUpHook onSubmit={this.onSubmit} fullname={this.state.fullname} onChange={this.onChange} username={this.state.username} password={this.state.password} confirmPassword={this.state.confirmPassword}/>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    security: state.security\n});\nexport default connect(mapStateToProps, {createNewUser})(Register);","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport LockTwoToneIcon from '@material-ui/icons/LockTwoTone';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(10),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(2),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    signup: {\n        fontSize: theme.spacing(5.4)\n    },\n}));\n\nfunction LoginHook(props) {\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper} >\n                <Avatar className={classes.avatar}>\n                    <LockTwoToneIcon />\n                </Avatar>\n                <Typography variant=\"h5\" className={classes.signup}>\n                    Login\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={props.onSubmit}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Email Address\"\n                                name=\"username\"\n                                type=\"email\"\n                                value={props.username}\n                                onChange={props.onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                value={props.password}\n                                onChange={props.onChange}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Login\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default LoginHook;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {login} from \"../actions/securityActions\";\nimport LoginHook from \"../hooks/LoginHook\";\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            \"username\": \"\",\n            \"password\": \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n\n    componentDidMount() {\n        if(this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        if(nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const LoginRequest = {\n            \"username\": this.state.username,\n            \"password\": this.state.password\n        }\n\n        this.props.login(LoginRequest);\n    }\n\n    render() {\n        return (\n            <LoginHook onSubmit={this.onSubmit} onChange={this.onChange} username={this.state.username} password={this.state.password}/>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps,{login})(Login);","import React from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\nconst SecureRoute = ({component: Component, security, ...otherProps}) => (\n    <Route {...otherProps} render={ props => security.validToken === true ? (<Component {...props} />) : (<Redirect to = \"login\" />)} />\n    );\n\nconst mapStateToProps = state => ({\n    security: state.security\n})\n\nexport default connect(mapStateToProps)(SecureRoute);","import axios from \"axios\";\nimport {DELETE_PROJECT, GET_ERRORS, GET_PROJECT, GET_PROJECTS} from \"./types\";\n\nexport const createProject = (project,history) => async dispatch => {\n    try {\n        await axios.post(\"/api/project\", project);\n        history.push(\"/dashboard\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getProjects = () => async dispatch => {\n    const res = await axios.get(\"/api/project/all\");\n    dispatch({\n        type: GET_PROJECTS,\n        payload: res.data\n    });\n};\n\nexport const getProject = (id,history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/project/${id}`);\n        dispatch({\n            type: GET_PROJECT,\n            payload: res.data\n        });\n    } catch (err) {\n        history.push(\"/dashboard\");\n    }\n};\n\nexport const deleteProject = id => async dispatch => {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n        type: DELETE_PROJECT,\n        payload: id\n    });\n}","import React from 'react';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(10),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: '100%',\n\n    },\n    content: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    tag: {\n        fontSize: theme.spacing(2),\n    },\n    newpaper: {\n\n        marginTop: theme.spacing(10),\n        display: 'flex',\n        flexWrap: \"nowrap\",\n        flexDirection: 'column',\n        alignItems: 'stretch',\n        overflow: \"scroll\",\n        maxHeight: theme.spacing(80),\n    },\n    signup: {\n        fontSize: theme.spacing(5.4)\n    },\n    link: {\n        fontSize: \"1.2em\",\n        marginTop: theme.spacing(5),\n        '&:hover': {\n            color: '#FFFFFF',\n            textDecoration: 'none',\n        },\n    },\n    root: {\n        minHeight: theme.spacing(10),\n        padding: \"2rem\",\n        paddingRight: \"5rem\",\n        backgroundColor: theme.palette.grey[\"700\"],\n    },\n    margin: {\n        marginBottom: theme.spacing(2),\n    },\n    div: {\n        overflow: \"hidden\"\n    },\n    scroll : {\n        overflow: \"auto\"\n    },\n    pdes: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-around\",\n    },\n    button: {\n        display: 'flex',\n        justifyContent: \"space-between\",\n    },\n    tempLink: {\n        '&:hover': {\n            color: '#FFFFFF',\n            textDecoration: 'none',\n        },\n    }\n}))\n\n\nfunction DashboardHook(props) {\n    const classes = useStyles();\n\n    return (\n\n        <Grid container>\n\n            <Grid item xs={0} sm={3}>\n            </Grid>\n            <Grid item container className={classes.paper} xs={12} sm={6} spacing={3}>\n                <Typography variant=\"h5\" className={classes.signup}>\n                    Project Dashboard\n                </Typography>\n\n                <Button component={Link} to={'/addProject'} color=\"primary\" variant=\"contained\" className={classes.link}>\n                    Add Project\n                </Button>\n\n\n                <Grid container xs={12}  className={classes.newpaper} spacing={4}>\n                    <Divider variant=\"middle\" className={classes.margin}/>\n\n                    {props.projects.map(elem => (\n                        <Grid item xs={12}>\n                            <Card className={classes.root}>\n                                <CardContent className={classes.content}>\n                                    <Button color=\"primary\" variant=\"outlined\" className={classes.tag}>{elem.projectIdentifier}</Button>\n                                    <div className={classes.pdes}>\n                                        <Typography variant=\"h4\">\n                                            {elem.projectName}\n                                        </Typography>\n                                        <Typography variant=\"h6\">\n                                            {elem.description}\n                                        </Typography>\n                                    </div>\n                                    <div className={classes.button}>\n                                        <ButtonGroup\n                                            orientation=\"vertical\"\n                                            aria-label=\"vertical outlined primary button group\"\n                                        >\n                                            <Button component={Link} to={`/projectBoard/${elem.projectIdentifier}`} variant=\"contained\" color=\"primary\" className={classes.tempLink}>Project Board</Button>\n                                            <Button component={Link} to={`/updateProject/${elem.projectIdentifier}`} variant=\"outlined\" color=\"default\" className={classes.tempLink}>Update Project Info</Button>\n                                            <Button variant=\"contained\" color=\"secondary\" className={classes.tempLink} onClick={props.onDeleteClick.bind(this,elem.projectIdentifier)}>Delete Project</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </CardContent>\n                            </Card>\n\n                        </Grid>\n\n\n                    ))}\n                </Grid>\n            </Grid>\n            <Grid item xs={0} sm={3}>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default DashboardHook;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {deleteProject, getProjects} from \"../actions/projectAction\";\nimport DashboardHook from \"../hooks/DashBoardHook\";\n\nclass DashBoard extends Component {\n\n    componentDidMount() {\n        this.props.getProjects();\n    }\n\n    onDeleteClick = id => {\n        this.props.deleteProject(id);\n    }\n\n    render() {\n\n        const {projects} = this.props.project;\n\n        return (\n            <DashboardHook projects={projects} onDeleteClick={this.onDeleteClick}/>\n        );\n    }\n}\n\nconst mapStateToProps = state =>  ({\n    project: state.project\n})\n\nexport default connect(mapStateToProps,{getProjects , deleteProject})(DashBoard);","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(10),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(2),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(4, 0, 4),\n    },\n    signup: {\n        fontSize: theme.spacing(5.4)\n    },\n}));\n\nfunction AddProjectHook(props) {\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper} >\n                <Avatar className={classes.avatar}>\n                    <ListAltIcon />\n                </Avatar>\n                <Typography variant=\"h5\" className={classes.signup}>\n                    Project Form\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={props.onSubmit}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <TextField\n                                name=\"projectName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"projectName\"\n                                label=\"Project Name\"\n                                autoFocus\n                                value={props.projectName}\n                                onChange={props.onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                name=\"projectIdentifier\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"projectIdentifier\"\n                                label=\"Unique Project ID\"\n                                value={props.projectIdentifier}\n                                onChange={props.onChange}\n\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                name=\"description\"\n                                variant=\"outlined\"\n                                fullWidth\n                                id=\"description\"\n                                label=\"Project Description\"\n                                onChange={props.onChange}\n                                multiline\n                                rowsMax={3}\n                                value={props.description}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"start_date\"\n                                name=\"start_date\"\n                                label=\"Start Date\"\n                                type=\"date\"\n                                defaultValue=\"yyyy-mm-dd\"\n                                fullWidth\n                                required\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                onChange={props.onChange}\n                                value={props.start_date}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"end_date\"\n                                name=\"end_date\"\n                                label=\"Estimated End Date\"\n                                type=\"date\"\n                                defaultValue=\"yyyy-mm-dd\"\n                                fullWidth\n                                required\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                onChange={props.onChange}\n                                value={props.end_date}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default AddProjectHook;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {createProject} from \"../../actions/projectAction\";\nimport AddProjectHook from \"../../hooks/AddProjectHook\";\nimport secureRoute from \"../../securityUtils/secureRoute\";\n\nclass AddProject extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors:{}\n        };\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newProject = {\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        }\n        this.props.createProject(newProject,this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors){\n            this.setState({errors:nextProps.errors});\n        }\n    }\n\n\n    render() {\n        return (\n            <AddProjectHook onSubmit={this.onSubmit} projectName={this.state.projectName} onChange={this.onChange} projectIdentifier={this.state.projectIdentifier} description={this.state.description} start_date={this.state.start_date} end_date={this.state.end_date}/>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps,{createProject})(AddProject);","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(10),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(2),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(4, 0, 4),\n    },\n    signup: {\n        fontSize: theme.spacing(5.4)\n    },\n}));\n\nfunction UpdateProjectHook(props) {\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper} >\n                <Avatar className={classes.avatar}>\n                    <ListAltIcon />\n                </Avatar>\n                <Typography variant=\"h5\" className={classes.signup}>\n                    Project Form\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={props.onSubmit}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <TextField\n                                name=\"projectName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"projectName\"\n                                label=\"Project Name\"\n                                autoFocus\n                                value={props.projectName}\n                                onChange={props.onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                name=\"projectIdentifier\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                disabled\n                                id=\"projectIdentifier\"\n                                label=\"Unique Project ID\"\n                                value={props.projectIdentifier}\n                                onChange={props.onChange}\n\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                name=\"description\"\n                                variant=\"outlined\"\n                                fullWidth\n                                id=\"description\"\n                                label=\"Project Description\"\n                                onChange={props.onChange}\n                                multiline\n                                rowsMax={3}\n                                value={props.description}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"start_date\"\n                                name=\"start_date\"\n                                label=\"Start Date\"\n                                type=\"date\"\n                                defaultValue=\"yyyy-mm-dd\"\n                                fullWidth\n                                required\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                onChange={props.onChange}\n                                value={props.start_date}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"end_date\"\n                                name=\"end_date\"\n                                label=\"Estimated End Date\"\n                                type=\"date\"\n                                defaultValue=\"yyyy-mm-dd\"\n                                fullWidth\n                                required\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                onChange={props.onChange}\n                                value={props.end_date}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default UpdateProjectHook;","import React, {Component} from 'react';\nimport * as classnames from \"classnames\";\nimport {connect} from \"react-redux\";\nimport {createProject, getProject} from \"../../actions/projectAction\";\nimport AddProjectHook from \"../../hooks/AddProjectHook\";\nimport UpdateProjectHook from \"../../hooks/UpdateProjectHook\";\n\nclass UpdateProject extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            id: \"\",\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        };\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        const {id} = this.props.match.params;\n        this.props.getProject(id, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const updateProject = {\n            id: this.state.id,\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        }\n        this.props.createProject(updateProject, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        } = nextProps.project;\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        })\n    }\n\n\n\n    render() {\n        return (\n            <UpdateProjectHook onSubmit={this.onSubmit} projectName={this.state.projectName} onChange={this.onChange} projectIdentifier={this.state.projectIdentifier} description={this.state.description} start_date={this.state.start_date} end_date={this.state.end_date}/>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps,{getProject , createProject})(UpdateProject);","import React from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link} from \"react-router-dom\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nconst useStyles = makeStyles(theme => ({\n    high: {\n        backgroundColor: '#FFD5D1',\n        marginBottom: theme.spacing(2),\n    },\n    medium: {\n        backgroundColor: '#E1F1FF',\n        marginBottom: theme.spacing(2),\n    },\n    low: {\n        backgroundColor: '#E7FFE1',\n        marginBottom: theme.spacing(2),\n    },\n    title: {\n        color: theme.palette.grey[900],\n    },\n    id: {\n        color: theme.palette.grey[900],\n    }\n\n\n}))\nfunction ProjectTaskHook(props) {\n    const {project_task} = props;\n    const classes = useStyles();\n    let cardClass;\n    let cardString;\n\n    if(project_task.priority === 1){\n        cardClass = classes.high;\n        cardString = \"HIGH\";\n    }\n    if(project_task.priority === 2){\n        cardClass = classes.medium;\n        cardString = \"MEDIUM\";\n    }\n    if(project_task.priority === 3){\n        cardClass = classes.low;\n        cardString = \"LOW\";\n    }\n\n    return (\n        <Card className={cardClass}>\n            <CardActions>\n                <Button variant=\"contained\">\n                    ID: {project_task.projectSequence}\n                </Button>\n                <Button variant=\"contained\">\n                    {cardString}\n                </Button>\n            </CardActions>\n            <CardContent>\n                <Typography variant=\"h4\" className={classes.title} gutterBottom>\n                    {project_task.acceptanceCriteria}\n                </Typography>\n                <ButtonGroup variant=\"contained\"  aria-label=\"contained primary button group\">\n                    <Button color=\"primary\" component={Link} to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}>\n                        View/ Update\n                    </Button>\n                    <Button color=\"secondary\" onClick = {props.onDeleteClick.bind(this,project_task.projectIdentifier,project_task.projectSequence)}>\n                        Delete\n                    </Button>\n                </ButtonGroup>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default ProjectTaskHook;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {deleteProjectTask} from \"../../../actions/backlogActions\";\nimport ProjectTaskHook from \"../../../hooks/ProjectTaskHook\";\n\nclass ProjectTask extends Component {\n\n    onDeleteClick = (backlog_id, pt_id) => {\n        this.props.deleteProjectTask(backlog_id,pt_id , this.props.history);\n    }\n\n    render() {\n        const {project_task} = this.props;\n        return (\n            <ProjectTaskHook project_task={project_task} onDeleteClick={this.onDeleteClick} history={this.props.history}/>\n        );\n    }\n}\n\nexport default connect(null,{deleteProjectTask})(ProjectTask);","import axios from \"axios\";\nimport {DELETE_PROJECT_TASK, GET_BACKLOG, GET_ERRORS, GET_PROJECT_TASK} from \"./types\";\n\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\n    try {\n        await axios.post(`/api/backlog/${backlog_id}` , project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const updateProjectTask = ( backlog_id, pt_id, project_task, history) => async dispatch => {\n    try {\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\n        dispatch({\n            type: GET_BACKLOG,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n        dispatch({\n            type: GET_PROJECT_TASK,\n            payload: res.data\n        });\n    } catch (err) {\n        history.push(\"/dashboard\");\n    }\n};\n\n\nexport const deleteProjectTask = (backlog_id, pt_id, history ) => async dispatch => {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n        type: DELETE_PROJECT_TASK,\n        payload: pt_id\n    })\n}","import React from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from '@material-ui/icons/Add';\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root:{\n\n    },\n    divider: {\n        marginTop: theme.spacing(4),\n    },\n    title: {\n        textAlign: 'center',\n        color: theme.palette.grey[900],\n    },\n    card: {\n        backgroundColor: theme.palette.grey[500],\n\n    },\n    fab: {\n        margin: 0,\n        top: 'auto',\n        right: theme.spacing(10),\n        bottom: theme.spacing(10),\n        left: 'auto',\n        position: 'fixed',\n    },\n    fabtext: {\n        fontSize: theme.spacing(2),\n    }\n\n}));\n\nfunction ProjectBoardHook(props) {\n    const classes = useStyles();\n    return (\n        <div>\n            <Fab  component={Link} to={`/addProjectTask/${props.id}`} variant=\"extended\" color=\"primary\" aria-label=\"add\" className={classes.fab}>\n                <AddIcon />\n                <Typography variant=\"h7\" className={classes.fabtext}>\n                    Add Task\n                </Typography>\n            </Fab>\n        <Grid container spacing={6} className={classes.root} >\n            <Grid item xs={1}>\n\n            </Grid>\n            <Grid item xs={3}>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography variant=\"h5\" className={classes.title}>\n                            TO DO\n                        </Typography>\n                    </CardContent>\n                </Card>\n                <Divider className={classes.divider}/>\n\n                {props.todoItems}\n            </Grid>\n            <Grid item xs={3}>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography variant=\"h5\" className={classes.title}>\n                            IN PROGRESS\n                        </Typography>\n                    </CardContent>\n                </Card>\n                <Divider className={classes.divider}/>\n\n                {props.inProgressItems}\n            </Grid>\n            <Grid item xs={3}>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <Typography variant=\"h5\" className={classes.title}>\n                            DONE\n                        </Typography>\n                    </CardContent>\n                </Card>\n                <Divider className={classes.divider}/>\n\n                {props.doneItems}\n            </Grid>\n            <Grid item xs={1}>\n\n            </Grid>\n        </Grid>\n        </div>\n\n    );\n}\n\nexport default ProjectBoardHook;","import React, {Component} from 'react';\nimport ProjectTask from \"./projectTasks/ProjectTask\";\nimport ProjectBoardHook from \"../../hooks/ProjectBoardHook\";\n\nclass Backlog extends Component {\n    render() {\n        const { project_tasks } = this.props;\n        const tasks = project_tasks.map(project_task => (\n           <ProjectTask key = {project_task.id} project_task={project_task} history={this.props.history}/>\n        ));\n\n        let todoItems = [];\n        let inProgressItems = [];\n        let doneItems = [];\n\n        for(let i=0;i< tasks.length;i++) {\n            if(tasks[i].props.project_task.status === \"TO_DO\")\n                todoItems.push(tasks[i]);\n\n            if(tasks[i].props.project_task.status === \"IN_PROGRESS\")\n                inProgressItems.push(tasks[i]);\n\n            if(tasks[i].props.project_task.status === \"DONE\")\n                doneItems.push(tasks[i]);\n\n        }\n\n        return (\n            <ProjectBoardHook todoItems={todoItems} inProgressItems={inProgressItems} doneItems={doneItems} id={this.props.id}/>\n        );\n    }\n}\n\nexport default Backlog;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {getBacklog} from \"../../actions/backlogActions\";\nimport Backlog from \"./Backlog\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\n\nclass ProjectBoard extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            errors: {}\n        };\n    }\n\n    componentDidMount(){\n        const {id} = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n\n    render() {\n        const {id} = this.props.match.params;\n        const {project_tasks} = this.props.backlog;\n        const {errors} = this.state;\n\n        let BoardContent;\n\n        const boardAlgorithm = (errors, project_tasks) => {\n                return <Backlog project_tasks = {project_tasks} history={this.props.history} id={id}/>\n\n        };\n        BoardContent = boardAlgorithm(errors, project_tasks);\n\n        return (\n            <div>\n                {BoardContent}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    backlog: state.backlog,\n    errors: state.errors\n});\n\nexport default  connect(mapStateToProps,{getBacklog})(ProjectBoard);","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(10),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(2),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(4, 0, 4),\n    },\n    signup: {\n        fontSize: theme.spacing(5.4)\n    },\n}));\n\nfunction AddProjectTaskHook(props) {\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper} >\n                <Avatar className={classes.avatar}>\n                    <ListAltIcon />\n                </Avatar>\n                <Typography variant=\"h5\" className={classes.signup}>\n                    Add Project Task\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={props.onSubmit}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <TextField\n                                name=\"summary\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"summary\"\n                                label=\"Summary\"\n                                autoFocus\n                                onChange={props.onChange}\n                                value={props.summary}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                name=\"acceptanceCriteria\"\n                                variant=\"outlined\"\n                                fullWidth\n                                id=\"acceptanceCriteria\"\n                                label=\"Acceptance Criteria\"\n                                multiline\n                                rowsMax={3}\n                                onChange={props.onChange}\n                                value={props.acceptanceCriteria}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"dueDate\"\n                                name=\"dueDate\"\n                                label=\"Due Date\"\n                                type=\"date\"\n                                defaultValue=\"yyyy-mm-dd\"\n                                fullWidth\n                                required\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                onChange={props.onChange}\n                                value={props.dueDate}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"priority\"\n                                select\n                                label=\"Select Priority\"\n                                fullWidth\n                                SelectProps={{\n                                    native: true,\n                                }}\n                                helperText=\"Please select your priority\"\n                                onChange={props.onChange}\n                                name=\"priority\"\n                                value={props.priority}>\n                                <option key=\"1\" value={1}>HIGH</option>\n                                <option key=\"2\" value={2}>MEDIUM</option>\n                                <option key=\"3\" value={3}>LOW</option>\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"status\"\n                                select\n                                label=\"Select Status\"\n                                fullWidth\n                                SelectProps={{\n                                    native: true,\n                                }}\n                                helperText=\"Please select the task status\"\n                                onChange={props.onChange}\n                                name=\"status\"\n                                value={props.status}>\n                                <option key=\"1\" value=\"TO_DO\">TO DO</option>\n                                <option key=\"2\" value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                <option key=\"3\" value=\"DONE\">DONE</option>\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default AddProjectTaskHook;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {addProjectTask} from \"../../../actions/backlogActions\";\nimport AddProjectTaskHook from \"../../../hooks/AddProjectTaskHook\";\n\nclass AddProjectTask extends Component {\n\n    constructor(props) {\n        super(props)\n        const {id} = this.props.match.params;\n        this.state = {\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 3,\n            dueDate: \"\",\n            projectIdentifier: id,\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]:e.target.value})\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newTask = {\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate\n        }\n        this.props.addProjectTask(this.state.projectIdentifier,newTask,this.props.history);\n    }\n\n    render() {\n\n        return (\n            <AddProjectTaskHook onSubmit={this.onSubmit} summary={this.state.summary} onChange={this.onChange} acceptanceCriteria={this.state.acceptanceCriteria} dueDate={this.state.dueDate} priority={this.state.priority} status={this.state.status}/>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps,{addProjectTask})(AddProjectTask);","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(10),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(2),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(4, 0, 4),\n    },\n    signup: {\n        fontSize: theme.spacing(5.4)\n    },\n}));\n\nfunction UpdateProjectTaskHook(props) {\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper} >\n                <Avatar className={classes.avatar}>\n                    <ListAltIcon />\n                </Avatar>\n                <Typography variant=\"h5\" className={classes.signup}>\n                    Update Project Task\n                </Typography>\n                <form className={classes.form} noValidate onSubmit={props.onSubmit}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12}>\n                            <TextField\n                                name=\"summary\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"summary\"\n                                label=\"Summary\"\n                                autoFocus\n                                onChange={props.onChange}\n                                value={props.summary}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                name=\"acceptanceCriteria\"\n                                variant=\"outlined\"\n                                fullWidth\n                                id=\"acceptanceCriteria\"\n                                label=\"Acceptance Criteria\"\n                                multiline\n                                rowsMax={3}\n                                onChange={props.onChange}\n                                value={props.acceptanceCriteria}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"dueDate\"\n                                name=\"dueDate\"\n                                label=\"Due Date\"\n                                type=\"date\"\n                                defaultValue=\"yyyy-mm-dd\"\n                                fullWidth\n                                required\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                value={props.dueDate}\n                                onChange={props.onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"priority\"\n                                name=\"priority\"\n                                select\n                                label=\"Select Priority\"\n                                fullWidth\n                                SelectProps={{\n                                    native: true,\n                                }}\n                                helperText=\"Please select your priority\"\n                                onChange={props.onChange}\n                                value={props.priority}>\n                                <option key=\"1\" value={1}>HIGH</option>\n                                <option key=\"2\" value={2}>MEDIUM</option>\n                                <option key=\"3\" value={3}>LOW</option>\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"status\"\n                                name=\"status\"\n                                select\n                                label=\"Select Status\"\n                                fullWidth\n                                SelectProps={{\n                                    native: true,\n                                }}\n                                helperText=\"Please select your status\"\n                                onChange={props.onChange}\n                                value={props.status}>\n                                <option key=\"1\" value=\"TO_DO\">TO DO</option>\n                                <option key=\"2\" value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                <option key=\"3\" value=\"DONE\">DONE</option>\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default UpdateProjectTaskHook;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {getProjectTask, updateProjectTask} from \"../../../actions/backlogActions\";\nimport {Link} from \"react-router-dom\";\nimport * as classnames from \"classnames\";\nimport UpdateProjectTaskHook from \"../../../hooks/UpdateProjectTaskHook\";\n\n\nclass UpdateProjectTask extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            created_At: \"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: null,\n            status: \"\",\n            priority: \"\",\n            dueDate: null,\n            projectIdentifier: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        const {backlog_id, pt_id} = this.props.match.params;\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        if(nextProps.errors) {\n            this.setState({errors: nextProps.errors});\n        }\n        const {\n            id,\n            created_At,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier} = nextProps.project_task;\n\n        this.setState({\n            id,\n            created_At,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier\n        });\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n\n        const updateProjectTask = {\n            id:this.state.id,\n            created_At:this.state.created_At,\n            projectSequence:this.state.projectSequence,\n            summary:this.state.summary,\n            acceptanceCriteria:this.state.acceptanceCriteria,\n            status:this.state.status,\n            priority:this.state.priority,\n            dueDate:this.state.dueDate,\n            projectIdentifier: this.state.projectIdentifier\n        }\n\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, updateProjectTask, this.props.history)\n    }\n\n    render() {\n        return (\n            <UpdateProjectTaskHook onSubmit={this.onSubmit} summary={this.state.summary} onChange={this.onChange} acceptanceCriteria={this.state.acceptanceCriteria} dueDate={this.state.dueDate} priority={this.state.priority} status={this.state.status}/>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps, {getProjectTask, updateProjectTask})(UpdateProjectTask);","import React from 'react';\nimport './App.css';\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jwt_decode from \"jwt-decode\";\nimport {SET_CURRENT_USER} from \"./actions/types\";\nimport store from \"./store\";\nimport {logout} from \"./actions/securityActions\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./UserManagement/Register\";\nimport Login from \"./UserManagement/Login\";\nimport SecureRoute from \"./securityUtils/secureRoute\";\nimport DashBoard from \"./components/DashBoard\";\nimport AddProject from \"./components/project/AddProject\";\nimport UpdateProject from \"./components/project/UpdateProject\";\nimport ProjectBoard from \"./components/projectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/projectBoard/projectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/projectBoard/projectTasks/UpdateProjectTask\";\nimport {createMuiTheme} from \"@material-ui/core\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\n\nconst jwtToken = localStorage.jwtToken;\n\nif(jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded\n  });\n  const currentTime = Date.now() / 1000;\n  if( decoded.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n};\n\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: cyan\n    }\n  });\n  return (\n      <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <Paper style={{ height: \"100vh\"}}>\n\n              <BrowserRouter>\n                <div className=\"App\">\n                <Header />\n                <Route exact path= \"/\" component={Landing} />\n                <Route exact path = \"/register\" component={Register} />\n                <Route exact path= \"/login\" component={Login} />\n\n                <Switch>\n                  <SecureRoute exact path=\"/dashboard\" component={DashBoard} />\n                  <SecureRoute exact path=\"/addProject\" component={AddProject} />\n                  <SecureRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n                  <SecureRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n                  <SecureRoute exact path = \"/addProjectTask/:id\" component = {AddProjectTask} />\n                  <SecureRoute exact path = \"/updateProjectTask/:backlog_id/:pt_id\" component = {UpdateProjectTask} />\n                </Switch>\n                </div>\n              </BrowserRouter>\n\n          </Paper>\n        </ThemeProvider>\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}